risco_lly=sd(lly)
risco_lly*100
stock_id='VRTX'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx
stock_id='BMY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
frontier = portfolioFrontier(ret_data)
frontier
frontierPlot(frontier, col=c("blue", "Orange"), pch=19)
monteCarloPoints(frontier, mcSteps = 1000, cex=0.25, pch=19)
equalWeightsPoints(frontier, pch=20, vcol="red")
equalWeightsPoints(frontier, pch=20, col="red")
# Mostrar os pontos relativos a cada um dos ativos escolhidos individualmente
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
equalWeightsPoints(frontier, pch=20, col="red")
equalWeightsPoints(frontier, pch=20)
equalWeightsPoints(frontier, pch=20, col=topo.colors(6))
equalWeightsPoints(frontier, pch=20, col="red")
equalWeightsPoints(frontier, pch=19, col="red")
equalWeightsPoints(frontier, pch=1, col="red")
# Mostrar os pontos relativos a cada um dos ativos escolhidos individualmente
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6),label="lly")
date_start=Sys.Date()-120
date_finish=Sys.Date()
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='LLY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
lly=stock_data$ret_closing_prices
lly=lly[-1]
lly
hist(lly)
risco_lly=sd(lly)
risco_lly*100
stock_id='VRTX'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx
risk_vrtx*100
stock_id='BMY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy*100
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
plot(ret_data,title="Returns")
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
frontier = portfolioFrontier(ret_data)
frontier
frontierPlot(frontier, col=c("blue", "Orange"), pch=19)
monteCarloPoints(frontier, mcSteps = 1000, cex=0.25, pch=19)
equalWeightsPoints(frontier, pch=20, col="red")
frontier
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6)")
######################################################################
##                          E N D                                   ##
######################################################################
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
equalWeightsPoints(frontier, pch=20, col="red")
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='LLY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
lly=stock_data$ret_closing_prices
lly=lly[-1]
lly
hist(lly)
risco_lly=sd(lly)
risco_lly*100
stock_id='VRTX'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx*100
stock_id='BMY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy*100
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
frontier = portfolioFrontier(ret_data)
frontier
frontierPlot(frontier, col=c("blue", "Orange"), pch=19)
monteCarloPoints(frontier, mcSteps = 1000, cex=0.25, pch=19)
equalWeightsPoints(frontier, pch=20, col="red")
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='PETR'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
stock_id='PETR4'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='PETR4'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
stock_id='IBOV.PETR4'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_id='PETR4.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
lly=stock_data$ret_closing_prices
lly=lly[-1]
lly
hist(lly)
risco_lly=sd(lly)
risco_lly*100
stock_id='VALE3.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx*100
stock_id='IRBR3.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy*100
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
frontier = portfolioFrontier(ret_data)
frontier
frontierPlot(frontier, col=c("blue", "Orange"), pch=19)
monteCarloPoints(frontier, mcSteps = 1000, cex=0.25, pch=19)
equalWeightsPoints(frontier, pch=20, col="red")
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='EMBR3.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
lly=stock_data$ret_closing_prices
lly=lly[-1]
lly
hist(lly)
risco_lly=sd(lly)
risco_lly*100
stock_id='VRTX'
stock_id='GOAU4.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx*100
stock_id='BMY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_id='TAEE11.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy*100
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
frontier = portfolioFrontier(ret_data)
frontier
frontierPlot(frontier, col=c("blue", "Orange"), pch=19)
monteCarloPoints(frontier, mcSteps = 1000, cex=0.25, pch=19)
equalWeightsPoints(frontier, pch=20, col="red")
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='ENBR3.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
lly=stock_data$ret_closing_prices
lly=lly[-1]
lly
hist(lly)
risco_lly=sd(lly)
risco_lly*100
stock_id='TAEE11.SA'
stock_id='GOAU4.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx*100
stock_id='TAEE11.SA'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy*100
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
frontier = portfolioFrontier(ret_data)
frontier = portfolioFrontier(ret_data)
frontier = portfolioFrontier(ret_data)
frontier
frontierPlot(frontier, col=c("blue", "Orange"), pch=19)
monteCarloPoints(frontier, mcSteps = 1000, cex=0.25, pch=19)
equalWeightsPoints(frontier, pch=20, col="red")
singleAssetPoints(frontier, pch=19, cex=1.5, col=topo.colors(6))
packages <- c("quantmod","PerformanceAnalytics","magrittr","ggplot2",
"fPortfolio","timeSeries","dplyr","yfR")
if(sum(as.numeric(!packages %in% installed.packages())) != 0){
installer <- packages[!packages %in% installed.packages()]
for(i in 1:length(installer)) {
install.packages(installer, dependencies = T)
break()}
sapply(packages, require, character = T)
} else {
sapply(packages, require, character = T)
}
date_start=Sys.Date()-120
date_finish=Sys.Date()
stock_id='LLY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
stock_data
lly=stock_data$ret_closing_prices
lly=lly[-1]
lly
hist(lly)
risco_lly=sd(lly)
risco_lly*100
stock_id='VRTX'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
vrtx=stock_data$ret_closing_prices
vrtx=vrtx[-1]
vrtx
risk_vrtx=sd(vrtx)
risk_vrtx*100
stock_id='BMY'
stock_data=yf_get(tickers = stock_id,
first_date = date_start,
last_date = date_finish)
bmy=stock_data$ret_closing_prices
bmy=bmy[-1]
bmy
risk_bmy=sd(bmy)
risk_bmy*100
returns=cbind(lly,vrtx,bmy)
returns
ret_data=as.timeSeries(returns)
ret_data
plot(ret_data)
exp_return=colMeans(ret_data)
exp_return*100
mat.cov = cov(ret_data)
mat.cov
x=length(lly)
x
cov.pop <- cov(ret_data)*(x-1)/(x)
cov.pop
pf_min_risk = minvariancePortfolio(ret_data)
pf_min_risk
#
# Show the Optimum Risk Stock Portfolio (risks must be multiplied by 100)
#
pf_optim = tangencyPortfolio(ret_data)
pf_optim
pf_max = maxreturnPortfolio(ret_data)
