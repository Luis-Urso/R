{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
#print(qtd)
#print(i)
print(append(qtd,i))
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
#print(qtd)
#print(i)
print(append(qtd," bill(s) of:", i))
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
#print(qtd)
#print(i)
print(append(as.string(qtd)," bill(s) of:", as.string(i))
distrib <- distrib - (qtd*i)
}
}
}
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
#print(qtd)
#print(i)
print(append(as.string(qtd)," bill(s) of:", as.string(i)))
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
#print(qtd)
#print(i)
print(append(str(qtd)," bill(s) of:", str(i)))
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
#print(qtd)
#print(i)
print(append(toString(qtd)," bill(s) of:", toString(i)))
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
#print(qtd)
#print(i)
print(append(toString(qtd)," bill(s) of:", toString(i)))
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
print(qtd)
print("Bills of:")
print(i)
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
print(qtd)
print("Bill(s) of:")
print(i)
resp=paste(qtd," bills(s) of: ",i)
print(resp)
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
resp <-""
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
print(qtd)
print("Bill(s) of:")
print(i)
resp=paste(qtd," bills(s) of: ",i)
print(resp)
distrib <- distrib - (qtd*i)
}
}
}
calc_change(510)
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
resp <-""
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
print(qtd)
print("Bill(s) of:")
print(i)
resp=paste(resp,qtd," bills(s) of: ",i," ; ")
distrib <- distrib - (qtd*i)
}
}
return(resp)
}
print(calc_change(510))
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
resp <-""
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
resp=paste(resp,qtd," bills(s) of: ",i," ; ")
distrib <- distrib - (qtd*i)
}
}
return(resp)
}
print(calc_change(510))
print(calc_change(1234))
pacotes <- c('dplyr',
'tidytext',
'gutenbergr',
'ggplot2',
'ggthemes',
'stringr',
'tidyr',
'wordcloud',
'reshape2'
)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
prince <- gutenberg_download(c(1232))
# Removes the front and back matter
prince
prince <- prince[-c(1:88), ]
tidy_data <- prince %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
tidy_data
data("stop_words")
tidy_data <- tidy_data %>%
anti_join(stop_words)
tidy_data %>%
filter(n > 50) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(fill = "darkred") +
theme_fivethirtyeight() +
xlab(NULL) +
ylab("Word Count") +
coord_flip() +
ggtitle("Word Usage in Data")
data_sent <- tidy_data %>%
inner_join(get_sentiments("bing"))
data_sent <- data_sent %>%
inner_join(get_sentiments("afinn"))
data_sent
table(data_sent$value,data_sent$sentiment)
data_sent %>%
filter(n > 20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill=sentiment)) +
theme_fivethirtyeight() +
geom_col() +
xlab(NULL) +
coord_flip() +
ylab("Word Count") +
ggtitle("Word Usage in Data", subtitle = "Sentiment Analysis Using
Bing et al.")
ggplot(data_sent, aes(value, sentiment,color="purple")) +
geom_bar(stat = "identity", show.legend = FALSE)
tidy_data %>% count(word) %>%
with(wordcloud(word, n, scale=c(.9,.5),min.freq=10,max.words = 50),random.color=FALSE)
tidy_data %>%
inner_join(frankenstein_bing) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),scale=c(.5,.5),
max.words = 50)
tidy_data %>% count(word) %>%
with(wordcloud(word, n, scale=c(.9,.5),min.freq=10,max.words = 50),random.color=FALSE)
tidy_data %>%
inner_join(frankenstein_bing) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),scale=c(.5,.5),
max.words = 50)
tidy_data %>%
inner_join(data_sent) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),scale=c(.5,.5),
max.words = 50)
tidy_data %>%
inner_join(data_sent) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),scale=c(.9,.5),
max.words = 50)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
data(iris)
IrisPlot <- ggplot(iris,aes(Sepal.Length, Petal.Length, colour=Species)) +
geom_point() +
ggtitle("Petals & Sepals")
print(IrisPlot)
print(IrisPlot + labs(y="Petal Length(cm)", x="Sepal Length (cm)") +
ggtitle("Petal & Sepal Length of Iris"))
IrisPlot + annotate("text",x=6,y=6,label="Sample of Text at 6,6") +
## Add rectangle in the chart
IrisPlot + annotate("rect",xmin=5, xmax=7,ymin=4,ymax=6,alpha=.4)
IrisPlot + annotate("segment",x=5,xend=7,y=4,yend=5,colour="black")
var1 <- 10
var1 <- 10
var1 <- 10
var2 = 20
var3 = "Hello "
var4 = "World"
var1 <- 10
var1 <- 10
var1 <- 10
var2 = 20
var3 = "Hello "
var4 = "World"
var1 <- 10
var2 = 20
var3 = "Hello "
var4 = "World"
var2
clear
cls
var1_2 <- var1 + var2
print(var1_2)
var1_2
var3_4 <- paste(var3,var4)
print(var3_4)
vector1 <- c(var1,var2)
vector2 <- c(var1,var3,var2,var4)
vector3 <- c(1:100)
vector3
vector4 <- c(10:200)
vector4
vector5 <- c(rep(33,10))
vector5
matrix1 <- matrix(3,5,10)
matrix1
matrix2 <- t(matrix1)
matrix2
aleat <- runif(10,min=0,max=100)
aleat
set.seed(0)
aleat <- runif(10,min=0,max=100)
aleat
randomic <- runif(10,min=0,max=100)
randomic
x <- 10
y <- 10+x^2
plot(x,y)
x <- c(1:100)
y <- 10+x^2
plot(x,y)
y <- 10+x^2*sin(x)
plot(x,y)
y <- 10+x^2*sin(x)*runif(10,min=0,max=1)
plot(x,y)
calc_x <- function(x)
{
calc <- 100+(2*x)^2
return(calc)
}
x <- c(1:100)
y <- calc_x(x)
plot(x,y)
calc_x <- function(x)
{
y <- 100+(2*x)^2
return(y)
}
x <- c(1:100)
y <- calc_x(x)
plot(x,y)
calc_x <- function(x)
{
y <- 100+(2*x)^2
return(y)
}
calc_change <- function(amount)
{
avail <- c(200,100,50,20,10,5,2,1,0.5,0.25)
distrib <- amount
resp <-""
for (i in avail)
{
qtd <- as.integer(distrib/i)
if(distrib>=i)
{
resp=paste(resp,qtd," bills(s) of: ",i," ; ")
distrib <- distrib - (qtd*i)
}
}
return(resp)
}
print(calc_change(1234))
print(calc_change(110))
var1 <- c(1:10)
var1 <- c(1:10)
for (index in var1)
{
print(index*2)
}
for (index in var1)
{
print(index*7)
}
for (index in var1)
{
print(index*7)
if(index*7==42)
{
print("Bingo")
}
}
for (index in var1)
{
multip <- index * 7
print(multip)
if(multip==42)
{
print("Bingo")
}
}
install.packages("ggplot2")
library("ggplot2")
data(iris)
view(iris)
View(iris)
View(iris)
View(iris)
View(iris)
IrisPlot <- ggplot(iris,aes(Sepal.Length, Petal.Length, colour=Species)) +
geom_point() +
ggtitle("Petals & Sepals")
print(IrisPlot)
print(IrisPlot + labs(y="Petal Length(cm)", x="Sepal Length (cm)") +
ggtitle("Petal & Sepal Length of Iris"))
IrisPlot + annotate("text",x=6,y=6,label="Sample of Text at 6,6") +
## Add rectangle in the chart
IrisPlot + annotate("rect",xmin=5, xmax=7,ymin=4,ymax=6,alpha=.4)
IrisPlot + annotate("segment",x=5,xend=7,y=4,yend=5,colour="black")
pacotes <- c('dplyr',
'tidytext',
'gutenbergr',
'ggplot2',
'ggthemes',
'stringr',
'tidyr',
'wordcloud',
'reshape2'
)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
prince <- gutenberg_download(c(1232))
View(prince)
# Removes the front and back matter
prince
prince <- prince[-c(1:88), ]
tidy_data <- prince %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
tidy_data
data("stop_words")
tidy_data <- tidy_data %>%
anti_join(stop_words)
tidy_data %>%
filter(n > 50) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_col(fill = "darkred") +
theme_fivethirtyeight() +
xlab(NULL) +
ylab("Word Count") +
coord_flip() +
ggtitle("Word Usage in Data")
data_sent <- tidy_data %>%
inner_join(get_sentiments("bing"))
data_sent <- tidy_data %>%
inner_join(get_sentiments("bing"))
data_sent <- data_sent %>%
inner_join(get_sentiments("afinn"))
data_sent
table(data_sent$value,data_sent$sentiment)
data_sent %>%
filter(n > 20) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill=sentiment)) +
theme_fivethirtyeight() +
geom_col() +
xlab(NULL) +
coord_flip() +
ylab("Word Count") +
ggtitle("Word Usage in Data", subtitle = "Sentiment Analysis Using
Bing et al.")
ggplot(data_sent, aes(value, sentiment,color="purple")) +
geom_bar(stat = "identity", show.legend = FALSE)
tidy_data %>% count(word) %>%
with(wordcloud(word, n, scale=c(.9,.5),min.freq=10,max.words = 50),random.color=FALSE)
tidy_data %>% count(word) %>%
with(wordcloud(word, n, scale=c(.5,.5),min.freq=10,max.words = 50),random.color=FALSE)
tidy_data %>% count(word) %>%
with(wordcloud(word, n, scale=c(.9,.5),min.freq=10,max.words = 50),random.color=FALSE)
tidy_data %>%
inner_join(data_sent) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),scale=c(.9,.5),
max.words = 50)
tidy_data %>% count(word) %>%
with(wordcloud(word, n, scale=c(.9,.5),min.freq=10,max.words = 50),random.color=FALSE)
